{"version":3,"sources":["views/home/content.js","views/home/index.js"],"names":["Component","moment","locale","site","Meta","Card","DPlayer","window","Content","state","visible","_handleCancel","e","setState","_handleClose","player","pause","_showModal","movie","video","videoKey","pic","coverKey","currentSrc","switchVideo","url","autoplay","type","play","setTimeout","container","document","getElementsByClassName","screenshot","thumbnails","_renderContent","movies","props","padding","map","item","index","rate","span","marginBottom","width","marginRight","meta","createdAt","fromNow","posterKey","history","push","_id","height","overflow","title","summary","Home","_getAllmovies","_LOADING_","method","year","then","res","catch","length","_selectItem","key","selectedKeys","collapsed","selectedKey","years","match","params","overflowY","maxWidth","React"],"mappings":"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","file":"home.b1325d23.js","sourceRoot":"../src","sourcesContent":["import React , { Component } from 'react';\nimport { Row,Card, Col, Badge,Icon,Modal,Spin } from 'antd';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\n\nmoment.locale('zh-cn');\nconst site = 'http://wdlj.zoomdong.xin/';\nconst Meta = Card.Meta;\nconst DPlayer = window.DPlayer\nexport default class Content extends Component{\n  \n   state = {\n     visible:false\n   }\n   \n   _handleCancel = (e) => {\n    this.setState({\n      visible:false\n    })\n   }\n\n   _handleClose = (e) => {\n    if(this.player && this.player.pause){\n      this.player.pause();\n    }\n   }\n\n   _showModal = (movie) => {\n     this.setState({\n       visible:true\n     })\n     const video = site + movie.videoKey\n     const pic = site + movie.coverKey\n     if(!this.player){\n      //  增加演示放置弹窗没有被渲染到dom结构中去\n       setTimeout(()=>{\n          this.player = new DPlayer({\n            container: document.getElementsByClassName('videoModal')[0],\n            screenshot: true,\n            // 自动播放\n            autoplay: true,\n            video:{\n              url:video,\n              pic:pic,\n              thumbnails: pic\n            }\n          })\n       },500)\n     } else {\n       if(this.player.video.currentSrc !== video){\n         this.player.switchVideo({\n           url:video,\n           autoplay: true,\n           pic:pic,\n           type:'auto'\n         })\n       }\n       this.player.play();\n     }\n   }\n\n  _renderContent = () => {\n    const { movies } = this.props;\n    return(\n      <div style={{ padding: '30px' }}>\n         <Row>\n           {\n             movies.map((item,index)=>(\n               <Col\n                 key = {`${item.rate}${index}`}\n                 xl={{span:6}}\n                 lg={{span:8}}\n                 md={{span:12}}\n                 sm={{span:24}}\n                 style={{marginBottom:'8px'}}\n               >\n                 <Card\n                   bordered={false}\n                   hoverable\n                   style={{ width:'100%' }}\n                   actions={[\n                      //  这里放更新时间\n                     <Badge>\n                       <Icon style={{ marginRight:'2px' }} type='clock-circle'/>\n                       {moment(item.meta.createdAt).fromNow(true) }\n                       前更新\n                     </Badge>,\n                     <Badge>\n                       <Icon style={{marginRight:'2px'}} type='star'/>\n                       {item.rate} 分 \n                     </Badge>\n                   ]}\n                   cover={\n                   <img  \n                    onClick = {()=>{\n                      this._showModal(item)\n                    }}\n                    //   这里对图片的处理使用了七牛的图片剪裁功能\n                    src={site + item.posterKey + '?imageMogr2/thumbnail/x1680/crop/1080x1600'} />}\n                 >\n                   {/* 标题和描述 */}\n                   <Meta \n                     onClick={()=>{this.props.history.push(`/detail/${item._id}`)}}\n                     style = {{ height:'202px',overflow:'hidden' }}\n                     title={<Link to={`/detail/${item._id}`} >{item.title}</Link>}\n                     description={<Link to={`/detail/${item._id}`} >{item.summary}</Link>}\n                   />\n                 </Card>\n               </Col>\n             ))\n           }\n         </Row>\n         <Modal\n           className='videoModal'\n           footer={null}\n           afterClose={this._handleClose}\n           visible={this.state.visible}\n           onCancel={this._handleCancel}\n         >\n           <Spin size=\"large\"/>\n         </Modal>\n      </div>\n    )\n  }\n  \n  render(){\n    return(\n      <div style={{ padding: '10px' }}>\n         { this._renderContent() }\n      </div>\n    )\n  }\n}","import React from 'react';\nimport Layout from '../../layouts/default';\nimport Content from './content';\nimport { request } from '../../lib';\nimport { Menu } from 'antd';\nexport default class Home extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n       collapsed: false,\n      selectedKey: '0',\n      years: ['2025','2024','2023','2022','2021','2020','2019','2018'],\n      type: this.props.match.params.type,\n      year: this.props.match.params.year,\n      movies: []\n    }\n  }\n  componentDidMount(){\n    this._getAllmovies();\n  }\n\n  _getAllmovies = () => {\n    request(window._LOADING_)({\n      method:'get',\n      url:`/api/v0/movies?type=${this.state.type || ''}&year=${this.state.year || ''}`\n    }).then(res => {\n      this.setState({\n        movies: res\n      }).catch(()=>{\n        this.setState({\n          movies: []\n        })\n      })\n    })\n  }\n\n  _renderContent = () => {\n    const { movies } = this.state;\n    if(!movies || !movies.length) return null;\n    return(\n      <Content movies = {movies}/>\n    )\n  }\n\n  _selectItem = ({ key }) => {\n     this.setState({\n       selectedKeys:key\n     })\n  }\n   \n  render(){\n    const { years,selectedKeys,collapsed } = this.state;\n    return(\n      <Layout {...this.props}>\n        <div className=\"flex-row full\">\n          <Menu\n            defaultSelectedKeys={[selectedKeys]}\n            mode='inline'\n            inlineCollapsed={collapsed}\n            style ={{height:'100%',overflowY:'scroll',maxWidth:'230px'}}\n            // 点击选中的时候\n            onSelect ={this._selectItem}\n            className=\"align-self-start\"\n          >\n          {\n            years.map((item,index)=>(\n              <Menu.Item key={index}>\n                <a href={`/year/${item}`}>{item} 年上映</a>\n              </Menu.Item>\n            ))\n          }\n          </Menu>\n          <div className=\"flex-1 scroll-y align-self-start\">\n            {this._renderContent()}\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}"]}