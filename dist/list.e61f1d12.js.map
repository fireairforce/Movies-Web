{"version":3,"sources":["views/admin/list.js"],"names":["moment","locale","site","List","props","dataSource","setDataSource","columns","title","dataIndex","key","render","text","record","posterKey","pubdate","map","it","i","date","format","country","meta","createdAt","fromNow","movieTypes","tags","padding","maxWidth","summary","_id","_deleteMovies","id","method","url","then","res","tempArr","JSON","parse","stringify","length","item","index","catch"],"mappings":"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","file":"list.e61f1d12.js","sourceRoot":"../src","sourcesContent":["import React, {\n  useEffect,\n  useState\n} from 'react';\nimport {\n  request\n} from '../../lib';\nimport Layout from '../../layouts/default';\nimport {\n  Table,\n  Button\n} from 'antd';\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\n\nmoment.locale('zh-cn');\n\nconst site = 'http://wdlj.zoomdong.xin/';\n\nexport default function List(props) {\n  const [collapsed, setCollapsed] = useState(false);\n  const [dataSource, setDataSource] = useState([]);\n  const columns = [\n    {\n      title: '海报',\n      dataIndex: 'posterKey',\n      key: 'posterKey',\n      render: (text, record) => (<img width=\"160\" src={site + record.posterKey} />)\n    }, {\n      title: '名字',\n      dataIndex: 'title',\n      key: 'title',\n    }, {\n      title: '原始名',\n      dataIndex: 'rawTitle',\n      key: 'rawTitle',\n    }, {\n      title: '上映时间',\n      dataIndex: 'pubdate',\n      key: 'pubdate',\n      render: (text, record) => (\n        record.pubdate.map((it, i) => (\n          <p key={i}>{moment(it.date).format('YYYY-MM-DD')} {it.country}</p>\n        ))\n      )\n    },\n    {\n      title: '评分',\n      dataIndex: 'rate',\n      key: 'rate'\n    },\n    {\n      title: '更新时间',\n      dataIndex: 'meta',\n      key: 'meta',\n      render: (text, record) => (<span>{moment(record.meta.createdAt).fromNow(true)} 前</span>)\n    },\n    {\n      title: '豆瓣 ID',\n      dataIndex: 'doubanId',\n      key: 'doubanId'\n    },\n    {\n      title: '类型',\n      dataIndex: 'movieTypes',\n      key: 'movieTypes',\n      render: (text, record) => (\n        record.movieTypes.map((it, i) => (\n          <p key={i}>{it}</p>\n        ))\n      )\n    },\n    {\n      title: '标签',\n      dataIndex: 'tags',\n      key: 'tags',\n      render: (text, record) => (\n        record.tags.map((it, i) => (\n          <p key={i}>{it}</p>\n        ))\n      )\n    },\n    {\n      title: '简要',\n      key: 'summary',\n      render: (text, record) => <p style={{padding: '5px', maxWidth: '800px'}}>{record.summary}</p>\n    },\n    {\n      title: '详情',\n      key: '_id',\n      render: (text, record) => <a href={`/detail/${record._id}`} target={'_blank'}>详情</a>\n    },\n    {\n      title: '操作',\n      key: 'action',\n      render: (text, record) => <Button type=\"danger\" onClick={()=>_deleteMovies(record._id)}>删除</Button>\n    }\n  ]\n\n  const _deleteMovies = (id) => {\n    request({\n      method:'delete',\n      url: `/admin/movies?id=${id}`\n    }).then((res)=>{\n      let tempArr=JSON.parse(JSON.stringify(res));\n      tempArr.length === 0 ? [] : tempArr.map((item,index)=>{\n        item.key = index;\n        return item;\n      })\n      setDataSource(tempArr)\n    }).catch(()=>{\n      setDataSource([]);\n    })\n  }\n\n  const _getAllMovies = () => {\n    request({\n      method:'get',\n      url:'/admin/movie/list',\n    }).then((res)=>{\n      // let tempArr=JSON.parse(JSON.stringify(res));\n      // tempArr.length === 0 ? [] : tempArr.map((item,index)=>{\n      //   item.key = index;\n      //   return item;\n      // })\n      res?res.length===0?[]:res.map((item,index)=>{\n         item.key = index;\n         return item;\n      }):[]\n      setDataSource(res)\n    }).catch(()=>{\n      setDataSource([]);\n    })\n  } \n\n  useEffect(()=>{\n    _getAllMovies();\n  },[]); \n\n  return(\n    <Layout {...props}>\n        <div className='flex-row full'>\n          <div className='flex-1 scroll-y align-self-start'>\n            <Table dataSource={dataSource} columns={columns} />\n          </div>\n        </div>\n    </Layout>\n  )\n}"]}